# -*- coding: binary -*-
require 'digest'

module Msf

####
# This allows one to extract PSEXESVC.EXE from Microsoft Sysinternal's
# PsExec.exe.
####
module Exploit::Remote::SMB::PsexecSvc

  # Returns the bytes for PSEXESVC.EXE and the version of PsExec in use on
  # success, or nil on error.
  #
  # @param psexec_path [String] the local filesystem path to PsExec.exe
  # @param verbose [Boolean] true if verbosity is desired, false if otherwise.
  #
  # @return [String],[Float] the bytes corresponding to PSEXESVC.EXE, and
  #                          the version of PsExec in use, respectively.
  def extract_psexesvc(psexec_path, verbose = false)
    read_offset = 0
    bytes_to_read = 0
    psexec_version = nil
    if verbose
      print_status("Calculating SHA-256 hash of #{psexec_path}...")
    end
    hash = Digest::SHA256.file(psexec_path).hexdigest
    # The read offset and size of the PSEXESVC.EXE binary for v1.98 is
    # 193,288 and 181,064, respectively.
    if hash == 'f8dbabdfa03068130c277ce49c60e35c029ff29d9e3c74c362521f3fb02670d5'
      psexec_version = 1.98
      read_offset = 193288
      bytes_to_read = 181064
    # For v2.0...
    elsif hash == '3c26ef3208a8bf6c2a23d46ef15c238197f528c04877db0bac2a090d15ec53b2'
      psexec_version = 2.0
      read_offset = 194312
      bytes_to_read = 185160
    elsif hash == '2a9c136176bbd1204b534933ee0880eaf747ed659b36d7eb13bd6aa77d35dd02'
      psexec_version = 2.1
      read_offset = 198408
      bytes_to_read = 189792
    elsif hash == '3b08535b4add194f5661e1131c8e81af373ca322cf669674cf1272095e5cab95'
      psexec_version = 2.11
      read_offset = 198408
      bytes_to_read = 189792
    else
      if verbose
        print_error("Hash is not correct!  One of the following is expected:\n" +
                    "  * f8dbabdfa03068130c277ce49c60e35c029ff29d9e3c74c362521f3fb02670d5\n" +
                    "  * 3c26ef3208a8bf6c2a23d46ef15c238197f528c04877db0bac2a090d15ec53b2\n" +
                    "  * 2a9c136176bbd1204b534933ee0880eaf747ed659b36d7eb13bd6aa77d35dd02\n" +
                    "  * 3b08535b4add194f5661e1131c8e81af373ca322cf669674cf1272095e5cab95\n" +
                    "Actual:   #{hash}\nEnsure that you have PsExec v1.98, v2.0, v2.1, or v2.11.")
      end
      return nil
    end

    if verbose
      print_status("File hash verified.  PsExec v#{psexec_version} detected.  Extracting PSEXESVC.EXE code from #{psexec_path}...")
    end
    # Extract the PSEXESVC.EXE code from PsExec.exe.
    hPsExec = File.open(psexec_path, 'rb')
    hPsExec.seek(read_offset)
    psexesvc = hPsExec.read(bytes_to_read)
    hPsExec.close

    return psexesvc, psexec_version
  end

end
end
